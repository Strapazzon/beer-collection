import Head from "next/head";
import type { GetServerSideProps, NextPage } from "next";
import { PunkApiClient } from "@modules/PunkApiClient";
import {
  AspectRatio,
  Card,
  Container,
  Grid,
  Heading,
  Separator,
  Text,
} from "@radix-ui/themes";
import { PageHeader } from "@modules/components/PageHeader";
import { PunkBeer } from "@modules/PunkApiClient/punkApi.types";
import { CatalogBeerCard } from "@modules/components/CatalogBeerCard";

type HomePageData = {
  data: PunkBeer[];
};

const Home: NextPage<HomePageData> = ({ data }) => {
  return (
    <>
      <Head>
        <title>My beer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container size="4">
          <PageHeader pageTitle="Beer catalog" />
          <Grid
            columns={{ lg: "4", md: "3", sm: "2", xs: "1" }}
            gap="3"
            gapY="6"
            width="auto"
          >
            {data.map((beer) => (
              <CatalogBeerCard key={beer.id} data={beer} />
            ))}
          </Grid>
        </Container>
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps<HomePageData> = async ({
  query,
}) => {
  const { page, page_size } = query ?? {};

  if (Array.isArray(page) || Array.isArray(page_size)) {
    return {
      notFound: true,
    };
  }

  if (
    (page && isNaN(parseInt(page))) ||
    (page_size && isNaN(parseInt(page_size)))
  ) {
    return {
      notFound: true,
    };
  }

  const parsedPage = page ? parseInt(page) : 1;
  const parsedPageSize = page_size ? parseInt(page_size) : 10;

  const data = await PunkApiClient.getBeers(parsedPage, parsedPageSize);

  return {
    props: {
      data,
    },
  };
};
